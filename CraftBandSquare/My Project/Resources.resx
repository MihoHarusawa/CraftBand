<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AskAbandanCurrentWork" xml:space="preserve">
    <value>編集中のデータを破棄してよろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskLoadDefault" xml:space="preserve">
    <value>規定値をロードします。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskLoadSameAs" xml:space="preserve">
    <value>現編集内容を破棄し{0}と同じにします。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskOutput" xml:space="preserve">
    <value>このままリスト出力を行いますか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskResetAddLengthColor" xml:space="preserve">
    <value>ひも長加算と色をすべてクリアします。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskResetInput" xml:space="preserve">
    <value>目標寸法以外をリセットします。目(ひも間のすき間)もリセットしてよろしいですか？
(はいで全てリセット、いいえで目(ひも間のすき間)を保持)</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskResetUpDown" xml:space="preserve">
    <value>ひも上下の編集内容をクリアします。サイズも初期化してよろしいですか？
(はいで全て初期化、いいえはサイズ保持)</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskSaveCurrentWork" xml:space="preserve">
    <value>編集中のデータを保存しますか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskSaveDefault" xml:space="preserve">
    <value>現データの状態を規定値として保存します。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskTargetAllRange" xml:space="preserve">
    <value>全範囲を{0}します。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="CalcBadRecord" xml:space="preserve">
    <value>無効レコード(番号={0})</value>
  </data>
  <data name="CalcConfirmRecalc" xml:space="preserve">
    <value>目標に基づき横・縦・高さのひも(目)数を再計算します。よろしいですか？</value>
  </data>
  <data name="CalcNoAddNumber" xml:space="preserve">
    <value>{0}追加用の番号がとれません。</value>
  </data>
  <data name="CalcNoBaseBandSet" xml:space="preserve">
    <value>基本のひも幅を設定してください。</value>
  </data>
  <data name="CalcNoDefCategory" xml:space="preserve">
    <value>未定義のカテゴリー'{0}'が参照されました。</value>
  </data>
  <data name="CalcNoInformation" xml:space="preserve">
    <value>処理に必要な情報がありません。</value>
  </data>
  <data name="CalcNoMaster" xml:space="preserve">
    <value>{0}'{1}'は登録されていません。</value>
  </data>
  <data name="CalcNoMasterOption" xml:space="preserve">
    <value>{0}の番号{1}で設定にない付属品名'{2}'(ひも番号{3})が参照されています。</value>
  </data>
  <data name="CalcNoMasterPattern" xml:space="preserve">
    <value>{0}の番号{1}で設定にない編みかた名'{2}'(ひも番号{3})が参照されています。</value>
  </data>
  <data name="CalcNoMoreChange" xml:space="preserve">
    <value>ほぼ目標のサイズになっています。やり直す場合はリセットしてください。</value>
  </data>
  <data name="CalcNoSelect" xml:space="preserve">
    <value>{0}を指定してください。</value>
  </data>
  <data name="CalcNoSquareCountSet" xml:space="preserve">
    <value>横ひも・縦ひも・編みひもの本数(目の数)をセットしてください。</value>
  </data>
  <data name="CalcNoTargetSet" xml:space="preserve">
    <value>目標寸法もしくは基本のひも幅が正しくありません。</value>
  </data>
  <data name="CalcOutTurn" xml:space="preserve">
    <value>折り返し</value>
  </data>
  <data name="CalcUpDownSaveErr" xml:space="preserve">
    <value>ひも上下レコードの保存エラーです。</value>
  </data>
  <data name="DefaultFileName" xml:space="preserve">
    <value>規定値.xml</value>
  </data>
  <data name="EnumStringAngle" xml:space="preserve">
    <value>0度(水平・横),45度(右斜め),90度(垂直・縦),135度(左斜め)</value>
    <comment>frmMain</comment>
  </data>
  <data name="EnumStringCenter" xml:space="preserve">
    <value>目の中央,ひも中央</value>
    <comment>frmMain</comment>
  </data>
  <data name="EnumStringPlate" xml:space="preserve">
    <value>なし,底面,側面,全面</value>
    <comment>frmMain</comment>
  </data>
  <data name="FormCaption" xml:space="preserve">
    <value>四つ目と四角 {0}</value>
    <comment>frmMain</comment>
  </data>
  <data name="LeftLower" xml:space="preserve">
    <value>左下</value>
    <comment>frmMain</comment>
  </data>
  <data name="LeftUpper" xml:space="preserve">
    <value>左上</value>
    <comment>frmMain</comment>
  </data>
  <data name="MessageCheckOK" xml:space="preserve">
    <value>チェックOKです。</value>
    <comment>frmMain</comment>
  </data>
  <data name="MessageNoDefaultFile" xml:space="preserve">
    <value>規定値が保存されていません。先に規定値保存を行ってください。</value>
    <comment>frmMain</comment>
  </data>
  <data name="MessageNoMore" xml:space="preserve">
    <value>これ以上増やせません。</value>
    <comment>frmMain</comment>
  </data>
  <data name="MessageNotExistDefaultFile" xml:space="preserve">
    <value>規定値保存ファイル'{0}'がありません。再度規定値保存を行ってください。</value>
    <comment>frmMain</comment>
  </data>
  <data name="MessageNoUpDownSize" xml:space="preserve">
    <value>水平・垂直の本数を指定してください。</value>
    <comment>frmMain</comment>
  </data>
  <data name="MessageUpDownError" xml:space="preserve">
    <value>{0}できませんでした。リセットしてやり直してください。</value>
    <comment>frmMain</comment>
  </data>
  <data name="TitleDllError" xml:space="preserve">
    <value>DLLエラー</value>
    <comment>mdlMain</comment>
  </data>
  <data name="TitleException" xml:space="preserve">
    <value>例外発生</value>
    <comment>mdlMain</comment>
  </data>
  <data name="UpDownAppend" xml:space="preserve">
    <value>上下図の登録</value>
    <comment>frmUpDownSetting</comment>
  </data>
  <data name="UpDownAppendInstruction" xml:space="preserve">
    <value>新たな上下図名を入力してください。[OK]ボタンで現パターンを登録します。</value>
    <comment>frmUpDownSetting</comment>
  </data>
  <data name="UpDownExistName" xml:space="preserve">
    <value>'{0}'は既に登録されています。置き換えますか？(いいえで別の名前を指定)</value>
    <comment>frmUpDownSetting</comment>
  </data>
  <data name="UpDownNoExistName" xml:space="preserve">
    <value>'{0}'は登録されていません。登録名を選択してください。</value>
    <comment>frmUpDownSetting</comment>
  </data>
  <data name="UpDownNoName" xml:space="preserve">
    <value>上下図名がセットされていません。</value>
    <comment>frmUpDownSetting</comment>
  </data>
  <data name="UpDownRead" xml:space="preserve">
    <value>上下図の呼出</value>
    <comment>frmUpDownSetting</comment>
  </data>
  <data name="UpDownReadInstruction" xml:space="preserve">
    <value>上下図名を選択してください。[OK]ボタンで現パターンに反映します。</value>
    <comment>frmUpDownSetting</comment>
  </data>
</root>
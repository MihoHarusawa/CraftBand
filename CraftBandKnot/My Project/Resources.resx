<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AskAbandanCurrentWork" xml:space="preserve">
    <value>編集中のデータを破棄してよろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskLoadDefault" xml:space="preserve">
    <value>規定値をロードします。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskOutput" xml:space="preserve">
    <value>このままリスト出力を行いますか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskResetAddLengthColor" xml:space="preserve">
    <value>ひも長加算と色をすべてクリアします。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskResetInput" xml:space="preserve">
    <value>目標寸法以外をリセットします。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskSaveCurrentWork" xml:space="preserve">
    <value>編集中のデータを保存しますか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="AskSaveDefault" xml:space="preserve">
    <value>現データの状態を規定値として保存します。よろしいですか？</value>
    <comment>frmMain</comment>
  </data>
  <data name="CalcConfirmRecalc" xml:space="preserve">
    <value>目標に基づき横・縦・高さのコマ数を再計算します。よろしいですか？</value>
  </data>
  <data name="CalcNoAddNumber" xml:space="preserve">
    <value>{0}追加用の番号がとれません。</value>
  </data>
  <data name="CalcNoBaseBandSet" xml:space="preserve">
    <value>基本のひも幅を設定してください。</value>
  </data>
  <data name="CalcNoDefCategory" xml:space="preserve">
    <value>未定義のカテゴリー'{0}'が参照されました。</value>
  </data>
  <data name="CalcNoInformation" xml:space="preserve">
    <value>処理に必要な情報がありません。</value>
  </data>
  <data name="CalcNoMaster" xml:space="preserve">
    <value>{0}'{1}'は登録されていません。</value>
  </data>
  <data name="CalcNoMasterPattern" xml:space="preserve">
    <value>{0}の番号{1}で設定にない編みかた名'{2}'(ひも番号{3})が参照されています。</value>
  </data>
  <data name="CalcNoMoreChange" xml:space="preserve">
    <value>ほぼ目標のサイズになっています。やり直す場合はリセットしてください。</value>
  </data>
  <data name="CalcNoPieceCountSet" xml:space="preserve">
    <value>横のコマ数・縦のコマ数・高さのコマ数をセットしてください。</value>
  </data>
  <data name="CalcNoSelect" xml:space="preserve">
    <value>{0}を指定してください。</value>
  </data>
  <data name="CalcNoTargetSet" xml:space="preserve">
    <value>目標とする縦寸法・横寸法・高さ寸法を設定してください。</value>
  </data>
  <data name="CalcOutAddLen" xml:space="preserve">
    <value>加算計 {0} (縁の始末:{1} ひも長加算:{2} {3}加算:{4})</value>
  </data>
  <data name="CalcOutDiffFrom" xml:space="preserve">
    <value>コマの{0}より</value>
  </data>
  <data name="CalcOutFoldingSame" xml:space="preserve">
    <value>手前({0})と奥は同じ、真ん中で折る</value>
  </data>
  <data name="CalcOutFromFolding" xml:space="preserve">
    <value>折り位置から</value>
  </data>
  <data name="CalcOutFromKnot" xml:space="preserve">
    <value>コマから</value>
  </data>
  <data name="CalcOutFront" xml:space="preserve">
    <value>手前({0})が奥より</value>
  </data>
  <data name="CalcOutKnotOf" xml:space="preserve">
    <value>&lt;コマの{0}&gt;</value>
  </data>
  <data name="CalcOutKnotSame" xml:space="preserve">
    <value>コマの{0}と同じ長さ</value>
  </data>
  <data name="CalcOutLong" xml:space="preserve">
    <value>長い</value>
  </data>
  <data name="CalcOutShort" xml:space="preserve">
    <value>短い</value>
  </data>
  <data name="CalcOutSideLeft" xml:space="preserve">
    <value>左</value>
  </data>
  <data name="CalcOutSideLower" xml:space="preserve">
    <value>下</value>
  </data>
  <data name="CalcOutSideRight" xml:space="preserve">
    <value>右</value>
  </data>
  <data name="CalcOutSideUpper" xml:space="preserve">
    <value>上</value>
  </data>
  <data name="CaptionExpand4To6" xml:space="preserve">
    <value>左,右</value>
    <comment>frmMain</comment>
  </data>
  <data name="CaptionExpand8To2" xml:space="preserve">
    <value>上,下</value>
    <comment>frmMain</comment>
  </data>
  <data name="DefaultFileName" xml:space="preserve">
    <value>規定値.xml</value>
  </data>
  <data name="FormCaption" xml:space="preserve">
    <value>四つ畳み編み {0}</value>
    <comment>frmMain</comment>
  </data>
  <data name="LOG_ColorModified" xml:space="preserve">
    <value>色の修正</value>
  </data>
  <data name="LOG_LaneModified" xml:space="preserve">
    <value>本幅数の修正</value>
  </data>
  <data name="MessageNoDefaultFile" xml:space="preserve">
    <value>規定値が保存されていません。先に規定値保存を行ってください。</value>
    <comment>frmMain</comment>
  </data>
  <data name="MessageNotExistDefaultFile" xml:space="preserve">
    <value>規定値保存ファイル'{0}'がありません。再度規定値保存を行ってください。</value>
    <comment>frmMain</comment>
  </data>
  <data name="OutputTextBottom" xml:space="preserve">
    <value>底</value>
  </data>
  <data name="TitleDllError" xml:space="preserve">
    <value>DLLエラー</value>
    <comment>mdlMain</comment>
  </data>
  <data name="TitleException" xml:space="preserve">
    <value>例外発生</value>
    <comment>mdlMain</comment>
  </data>
  <data name="ModelPlateNames" xml:space="preserve">
    <value>底,左側面,前面,右側面,背面</value>
  </data>
  <data name="ModelNoImage" xml:space="preserve">
    <value>{0}が描画できませんでした。</value>
  </data>
  <data name="ModelDiffHeight" xml:space="preserve">
    <value>側面の高さが異なるため直方体になりません。</value>
  </data>
</root>